{"ast":null,"code":"var _jsxFileName = \"/Users/slavi.yovchev/Downloads/login_register/src/src/components/field/Field.tsx\",\n  _s = $RefreshSig$();\nimport './field.css';\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Field = _ref => {\n  _s();\n  let {\n    labelValue,\n    inputType\n  } = _ref;\n  const lowerCaseLabel = labelValue.toLowerCase();\n  const [showPassword, setShowPassword] = useState(false);\n  const isPasswordCheck = () => {\n    return lowerCaseLabel === 'password';\n  };\n  const getType = () => {\n    return isPasswordCheck() ? showPassword ? 'text' : inputType : inputType;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"field-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: labelValue + \": \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: getType(),\n      name: lowerCaseLabel,\n      placeholder: \"Enter \" + lowerCaseLabel,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), isPasswordCheck() && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"eye-button\",\n      onClick: () => setShowPassword(!showPassword),\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: showPassword ? faEye : faEyeSlash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Field, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = Field;\nexport default Field;\nvar _c;\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"names":["useState","FontAwesomeIcon","faEye","faEyeSlash","jsxDEV","_jsxDEV","Field","_ref","_s","labelValue","inputType","lowerCaseLabel","toLowerCase","showPassword","setShowPassword","isPasswordCheck","getType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","required","onClick","icon","_c","$RefreshReg$"],"sources":["/Users/slavi.yovchev/Downloads/login_register/src/src/components/field/Field.tsx"],"sourcesContent":["import './field.css'\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\ninterface FieldProps {\n  labelValue: string;\n  inputType: string;\n}\n\nconst Field = ({ labelValue, inputType }: FieldProps) => {\n  const lowerCaseLabel: string = labelValue.toLowerCase();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const isPasswordCheck = (): boolean => {\n    return lowerCaseLabel === 'password';\n  }\n\n  const getType = (): string => {\n    return isPasswordCheck() ? (showPassword ? 'text' : inputType) : inputType;\n  };\n\n  return (\n    <div className=\"field-container\">\n      <label>{labelValue + \": \"}</label>\n        <input type={ getType() } name={lowerCaseLabel} \n        placeholder={\"Enter \" + lowerCaseLabel} required/>\n        { isPasswordCheck() && (\n          <button className='eye-button' onClick={() => setShowPassword(!showPassword)}>\n            <FontAwesomeIcon icon={showPassword ? faEye : faEyeSlash} />\n          </button>\n        )}\n      </div>\n  );\n}\n\nexport default Field;"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,KAAK,EAAEC,UAAU,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtE,MAAMC,KAAK,GAAGC,IAAA,IAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC,UAAU;IAAEC;EAAsB,CAAC,GAAAH,IAAA;EAClD,MAAMI,cAAsB,GAAGF,UAAU,CAACG,WAAW,CAAC,CAAC;EACvD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMe,eAAe,GAAGA,CAAA,KAAe;IACrC,OAAOJ,cAAc,KAAK,UAAU;EACtC,CAAC;EAED,MAAMK,OAAO,GAAGA,CAAA,KAAc;IAC5B,OAAOD,eAAe,CAAC,CAAC,GAAIF,YAAY,GAAG,MAAM,GAAGH,SAAS,GAAIA,SAAS;EAC5E,CAAC;EAED,oBACEL,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAAa,QAAA,EAAQT,UAAU,GAAG;IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChCjB,OAAA;MAAOkB,IAAI,EAAGP,OAAO,CAAC,CAAG;MAACQ,IAAI,EAAEb,cAAe;MAC/Cc,WAAW,EAAE,QAAQ,GAAGd,cAAe;MAACe,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAChDP,eAAe,CAAC,CAAC,iBACjBV,OAAA;MAAQY,SAAS,EAAC,YAAY;MAACU,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAAC,CAACD,YAAY,CAAE;MAAAK,QAAA,eAC3Eb,OAAA,CAACJ,eAAe;QAAC2B,IAAI,EAAEf,YAAY,GAAGX,KAAK,GAAGC;MAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAAd,EAAA,CAxBKF,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}